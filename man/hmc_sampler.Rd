% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/hmc_sampler.R
\name{hmc_sampler}
\alias{hmc_sampler}
\title{Hamiltonian Monte Carlo (HMC) Sampler}
\usage{
hmc_sampler(
  log_post,
  grad_log_post,
  initial_beta,
  initial_epsilon,
  L,
  n_iter,
  n_warmup,
  X,
  y,
  r,
  beta_mu,
  beta_sigma,
  target_accept = 0.65,
  adapt_gamma = 0.05,
  adapt_kappa = 0.75,
  adapt_t0 = 10
)
}
\arguments{
\item{log_post}{A function that computes the log-posterior density given the current parameter values and the data.}

\item{grad_log_post}{A function that computes the gradient of the log-posterior density.}

\item{initial_beta}{A numeric vector of initial parameter values.}

\item{initial_epsilon}{A positive numeric value for the initial step size.}

\item{L}{A positive integer representing the number of leapfrog steps in each iteration.}

\item{n_iter}{A positive integer specifying the number of iterations (after warm-up) for sampling.}

\item{n_warmup}{A non-negative integer specifying the number of warm-up iterations during which the step size is adapted.}

\item{X}{A predictor matrix used in the log-posterior and its gradient calculations.}

\item{y}{A response vector used in the log-posterior and its gradient calculations.}

\item{r}{Additional data or hyperparameter required by the log-posterior function.}

\item{beta_mu}{A numeric vector specifying the prior mean for the beta parameters.}

\item{beta_sigma}{A numeric vector or scalar specifying the prior standard deviation for the beta parameters.}

\item{target_accept}{A numeric value in (0,1) indicating the desired target acceptance probability for adaptation.}

\item{adapt_gamma}{A positive numeric value controlling the adaptation rate in dual averaging.}

\item{adapt_kappa}{A numeric value in (0,1) for smoothing the step size updates.}

\item{adapt_t0}{A positive numeric value acting as a stabilization constant during adaptation.}
}
\value{
A list containing:
\describe{
  \item{samples}{A matrix of posterior samples collected after the warm-up period.}
  \item{acceptance_rate}{The overall acceptance rate across all iterations (warm-up + sampling).}
  \item{final_epsilon}{The final adapted step size after warm-up.}
}
}
\description{
This function implements the Hamiltonian Monte Carlo algorithm to sample from a posterior distribution. It uses dual averaging during the warm-up period to adapt the step size (epsilon) based on a target acceptance probability.
}
\examples{
\dontrun{
# Define the log-posterior and its gradient functions
log_post <- function(beta, X, y, r, beta_mu, beta_sigma) {
  # Compute log-posterior
}

grad_log_post <- function(beta, X, y, r, beta_mu, beta_sigma) {
  # Compute gradient of log-posterior
}

# Data setup (example)
X <- matrix(rnorm(100 * 3), ncol = 3)
y <- rnorm(100)
r <- NULL
beta_mu <- rep(0, 3)
beta_sigma <- rep(1, 3)

initial_beta <- rep(0, 3)
initial_epsilon <- 0.1
L <- 10
n_iter <- 1000
n_warmup <- 500

# Run the HMC sampler
result <- hmc_sampler(log_post, grad_log_post, initial_beta, initial_epsilon,
                      L, n_iter, n_warmup, X, y, r, beta_mu, beta_sigma)

# Examine results
samples <- result$samples
acceptance_rate <- result$acceptance_rate
}

}
