% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rw_metropolis_model.R
\name{rw_metropolis}
\alias{rw_metropolis}
\title{Random-Walk Metropolis Sampler for Negative Binomial Regression}
\usage{
rw_metropolis(
  log_post,
  init,
  iterations,
  proposal_sd,
  X,
  y,
  r,
  beta_mu,
  beta_sigma
)
}
\arguments{
\item{log_post}{A function to compute the log-posterior of the model. The function
should accept parameters in the following order: \code{log_post(beta, X, y, r, beta_mu, beta_sigma)}.}

\item{init}{A numeric vector providing the initial values for the parameter \code{beta}.}

\item{iterations}{An integer specifying the total number of iterations to run the sampler.}

\item{proposal_sd}{A numeric scalar (or vector of the same length as \code{init}) specifying
the standard deviation(s) of the Gaussian proposal distribution.}

\item{X}{A numeric matrix representing the design matrix (including an intercept, if applicable).}

\item{y}{A numeric vector containing the observed count data.}

\item{r}{A numeric value that represents the dispersion parameter in the negative binomial model.}

\item{beta_mu}{A numeric value or vector indicating the mean(s) for the normal prior on \code{beta}.}

\item{beta_sigma}{A numeric value or vector indicating the standard deviation(s) for the normal prior on \code{beta}.}
}
\value{
A matrix of posterior samples for \code{beta}, where each row corresponds to one iteration
  and each column corresponds to a parameter.
}
\description{
This function implements a random-walk Metropolis algorithm for sampling from the
posterior distribution of regression coefficients (\code{beta}) in a negative binomial
regression model. The algorithm proposes new values by adding a normally distributed noise
to the current parameter values and accepts/rejects proposals based on the Metropolis acceptance rule.
}
\examples{
\dontrun{
  # Example usage:
  # Generate synthetic data (assuming simulate_negbin_data is defined)
  n <- 200
  p <- 3
  beta_true <- c(1, 0, -1)
  r <- 2
  data <- simulate_negbin_data(n, p, beta_true, r, seed = 123)
  X <- data$X
  y <- data$y

  # Set initial beta, number of iterations, and proposal standard deviation
  init <- rep(0, p)
  iterations <- 1000
  proposal_sd <- 0.1

  # Run the Random-Walk Metropolis sampler
  chain <- rw_metropolis(
    log_post = log_posterior_negbin,
    init = init,
    iterations = iterations,
    proposal_sd = proposal_sd,
    X = X,
    y = y,
    r = r,
    beta_mu = 0,
    beta_sigma = 1
  )

  # Check the posterior mean for beta
  colMeans(chain)
}

}
